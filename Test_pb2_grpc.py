# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import Test_pb2 as Test__pb2


class ImageSrvStub(object):
    """import "google/protobuf/timestamp.proto";

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.analyze = channel.stream_unary(
                '/ImageSrv/analyze',
                request_serializer=Test__pb2.Image.SerializeToString,
                response_deserializer=Test__pb2.Result.FromString,
                )


class ImageSrvServicer(object):
    """import "google/protobuf/timestamp.proto";

    """

    def analyze(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ImageSrvServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'analyze': grpc.stream_unary_rpc_method_handler(
                    servicer.analyze,
                    request_deserializer=Test__pb2.Image.FromString,
                    response_serializer=Test__pb2.Result.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ImageSrv', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ImageSrv(object):
    """import "google/protobuf/timestamp.proto";

    """

    @staticmethod
    def analyze(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/ImageSrv/analyze',
            Test__pb2.Image.SerializeToString,
            Test__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
